include(FetchContent)
set(LLVM_COMMIT d86e2cc2e37c9051a5cf5a4b9b3ae4b9a961ef11)
set(LLVM_SRC_URL "https://github.com/llvm/llvm-project/archive/${LLVM_COMMIT}.zip" CACHE STRING "")
FetchContent_Declare(
  llvm_project
)
FetchContent_GetProperties(llvm_project)

if(NOT llvm_project_POPULATED)
  FetchContent_Populate(llvm_project
    URL ${LLVM_SRC_URL}
  )
endif()
set(LLVM_BUILD_EXAMPLES OFF CACHE BOOL "")
set(LLVM_BUILD_TOOLS OFF CACHE BOOL "")
set(LLVM_INCLUDE_EXAMPLES OFF CACHE BOOL "")
set(LLVM_INCLUDE_TESTS OFF CACHE BOOL "" FORCE)
set(MLIR_INCLUDE_TESTS OFF CACHE BOOL "" FORCE)
set(LLVM_INCLUDE_BENCHMARKS OFF CACHE BOOL "")
set(LLVM_TARGETS_TO_BUILD host;NVPTX CACHE STRING "")
set(LLVM_ENABLE_ASSERTIONS ON CACHE BOOL "")
set(LLVM_ENABLE_PROJECTS mlir CACHE STRING "")
set(LLVM_APPEND_VC_REV OFF CACHE BOOL "")
set(LLVM_ENABLE_ZLIB OFF CACHE BOOL "")
set(LLVM_INSTALL_UTILS ON CACHE BOOL "")
set(LLVM_ENABLE_OCAMLDOC OFF CACHE BOOL "")
set(LLVM_ENABLE_BINDINGS OFF CACHE BOOL "")
set(LLVM_OPTIMIZED_TABLEGEN ON CACHE BOOL "" FORCE)
set(MLIR_ENABLE_CUDA_RUNNER OFF CACHE BOOL "")

set(llvm_project_BINARY_DIR ${llvm_project_BINARY_DIR})
add_subdirectory(${llvm_project_SOURCE_DIR}/llvm ${llvm_project_BINARY_DIR})
set(LLVM_MAIN_SRC_DIR ${llvm_project_SOURCE_DIR}/llvm PARENT_SCOPE)
set(LLVM_INCLUDE_DIRS ${llvm_project_SOURCE_DIR}/llvm/include;${llvm_project_BINARY_DIR}/include PARENT_SCOPE)
set(LLVM_EXTERNAL_LIT "${llvm_project_BINARY_DIR}/bin/llvm-lit" CACHE STRING "" PARENT_SCOPE)
set(LTDL_SHLIB_EXT ${CMAKE_SHARED_LIBRARY_SUFFIX} PARENT_SCOPE)
set(LLVM_LIBRARY_DIR "${llvm_project_BINARY_DIR}/lib" PARENT_SCOPE)
set(MLIR_INCLUDE_DIRS "${llvm_project_SOURCE_DIR}/mlir/include;${llvm_project_BINARY_DIR}/tools/mlir/include" PARENT_SCOPE)
set(LLVM_TOOLS_BINARY_DIR ${llvm_project_BINARY_DIR}/bin CACHE STRING "" FORCE PARENT_SCOPE)
