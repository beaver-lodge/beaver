pub const c = @import("prelude.zig");
const kl = @import("kinda_library.zig");
const e = @import("erl_nif");
const nifPrefix = "Elixir.Beaver.MLIR.CAPI.";
pub fn N(comptime Kinds: anytype, c_: anytype, comptime name: anytype) e.ErlNifFunc {
    return kl.KindaNIF(Kinds, c_, name, .{ .overwrite = nifPrefix ++ name });
}
pub fn L(comptime Kinds: anytype, c_: anytype, comptime name: anytype) e.ErlNifFunc {
    return kl.KindaNIF(Kinds, c_, name, .{ .flags = 1, .overwrite = nifPrefix ++ name });
}
const mlir_capi = @import("mlir_capi.zig");
const K = mlir_capi.allKinds;
pub const nif_entries = .{
    N(K, c, "beaverApplyOwnedPatternSetOnOperation"),
    N(K, c, "beaverApplyOwnedPatternSetOnRegion"),
    N(K, c, "beaverAttributeIsNull"),
    N(K, c, "beaverBlockIsNull"),
    N(K, c, "beaverContextIsNull"),
    N(K, c, "beaverCreateExternalPass"),
    N(K, c, "beaverDialectIsNull"),
    N(K, c, "beaverDialectRegistryIsNull"),
    N(K, c, "beaverEnterMultiThreadedExecution"),
    N(K, c, "beaverExitMultiThreadedExecution"),
    N(K, c, "beaverGetIRDLDefinedAttr"),
    N(K, c, "beaverGetIRDLDefinedType"),
    N(K, c, "beaverGetNumRegisteredOperations"),
    N(K, c, "beaverGetReassociationIndicesForReshape"),
    N(K, c, "beaverGetRegisteredOperationName"),
    N(K, c, "beaverIsOpNameTerminator"),
    N(K, c, "beaverLoadIRDLDialects"),
    N(K, c, "beaverLocationIsNull"),
    N(K, c, "beaverLocationPrint"),
    N(K, c, "beaverLogicalResultFailure"),
    N(K, c, "beaverLogicalResultIsFailure"),
    N(K, c, "beaverLogicalResultIsSuccess"),
    N(K, c, "beaverLogicalResultSuccess"),
    N(K, c, "beaverMlirExecutionEngineIsNull"),
    N(K, c, "beaverMlirNamedAttributeGetAttribute"),
    N(K, c, "beaverMlirNamedAttributeGetName"),
    N(K, c, "beaverMlirOperationStateGetContext"),
    N(K, c, "beaverMlirOperationStateGetLocation"),
    N(K, c, "beaverMlirOperationStateGetName"),
    N(K, c, "beaverMlirOperationStateGetNumAttributes"),
    N(K, c, "beaverMlirOperationStateGetNumOperands"),
    N(K, c, "beaverMlirOperationStateGetNumRegions"),
    N(K, c, "beaverMlirOperationStateGetNumResults"),
    N(K, c, "beaverModuleIsNull"),
    N(K, c, "beaverOperationDumpGeneric"),
    N(K, c, "beaverOperationGetAttribute"),
    N(K, c, "beaverOperationGetName"),
    N(K, c, "beaverOperationIsNull"),
    N(K, c, "beaverPassGetArgument"),
    N(K, c, "beaverPassGetDescription"),
    N(K, c, "beaverPassGetName"),
    N(K, c, "beaverPassManagerEnableTiming"),
    N(K, c, "beaverPassManagerGetContext"),
    N(K, c, "beaverPatternSetAddOwnedPDLPattern"),
    N(K, c, "beaverRegionIsNull"),
    N(K, c, "beaverRegisteredDialects"),
    N(K, c, "beaverRegisteredOperationNameGetDialectName"),
    N(K, c, "beaverRegisteredOperationNameGetOpName"),
    N(K, c, "beaverRegisteredOperationsOfDialect"),
    N(K, c, "beaverRewritePatternSetGet"),
    N(K, c, "beaverStringRefGetData"),
    N(K, c, "beaverStringRefGetLength"),
    N(K, c, "beaverSymbolTableIsNull"),
    N(K, c, "beaverTypeIsNull"),
    N(K, c, "beaverValueIsNull"),
    N(K, c, "mlirAffineAddExprGet"),
    N(K, c, "mlirAffineBinaryOpExprGetLHS"),
    N(K, c, "mlirAffineBinaryOpExprGetRHS"),
    N(K, c, "mlirAffineCeilDivExprGet"),
    N(K, c, "mlirAffineConstantExprGet"),
    N(K, c, "mlirAffineConstantExprGetValue"),
    N(K, c, "mlirAffineDimExprGet"),
    N(K, c, "mlirAffineDimExprGetPosition"),
    N(K, c, "mlirAffineExprCompose"),
    N(K, c, "mlirAffineExprDump"),
    N(K, c, "mlirAffineExprEqual"),
    N(K, c, "mlirAffineExprGetContext"),
    N(K, c, "mlirAffineExprGetLargestKnownDivisor"),
    N(K, c, "mlirAffineExprIsAAdd"),
    N(K, c, "mlirAffineExprIsABinary"),
    N(K, c, "mlirAffineExprIsACeilDiv"),
    N(K, c, "mlirAffineExprIsAConstant"),
    N(K, c, "mlirAffineExprIsADim"),
    N(K, c, "mlirAffineExprIsAFloorDiv"),
    N(K, c, "mlirAffineExprIsAMod"),
    N(K, c, "mlirAffineExprIsAMul"),
    N(K, c, "mlirAffineExprIsASymbol"),
    N(K, c, "mlirAffineExprIsFunctionOfDim"),
    N(K, c, "mlirAffineExprIsMultipleOf"),
    N(K, c, "mlirAffineExprIsPureAffine"),
    N(K, c, "mlirAffineExprIsSymbolicOrConstant"),
    N(K, c, "mlirAffineExprPrint"),
    N(K, c, "mlirAffineFloorDivExprGet"),
    N(K, c, "mlirAffineMapAttrGet"),
    N(K, c, "mlirAffineMapAttrGetTypeID"),
    N(K, c, "mlirAffineMapAttrGetValue"),
    N(K, c, "mlirAffineMapCompressUnusedSymbols"),
    N(K, c, "mlirAffineMapConstantGet"),
    N(K, c, "mlirAffineMapDump"),
    N(K, c, "mlirAffineMapEmptyGet"),
    N(K, c, "mlirAffineMapEqual"),
    N(K, c, "mlirAffineMapGet"),
    N(K, c, "mlirAffineMapGetContext"),
    N(K, c, "mlirAffineMapGetMajorSubMap"),
    N(K, c, "mlirAffineMapGetMinorSubMap"),
    N(K, c, "mlirAffineMapGetNumDims"),
    N(K, c, "mlirAffineMapGetNumInputs"),
    N(K, c, "mlirAffineMapGetNumResults"),
    N(K, c, "mlirAffineMapGetNumSymbols"),
    N(K, c, "mlirAffineMapGetResult"),
    N(K, c, "mlirAffineMapGetSingleConstantResult"),
    N(K, c, "mlirAffineMapGetSubMap"),
    N(K, c, "mlirAffineMapIsEmpty"),
    N(K, c, "mlirAffineMapIsIdentity"),
    N(K, c, "mlirAffineMapIsMinorIdentity"),
    N(K, c, "mlirAffineMapIsPermutation"),
    N(K, c, "mlirAffineMapIsProjectedPermutation"),
    N(K, c, "mlirAffineMapIsSingleConstant"),
    N(K, c, "mlirAffineMapMinorIdentityGet"),
    N(K, c, "mlirAffineMapMultiDimIdentityGet"),
    N(K, c, "mlirAffineMapPermutationGet"),
    N(K, c, "mlirAffineMapPrint"),
    N(K, c, "mlirAffineMapReplace"),
    N(K, c, "mlirAffineMapZeroResultGet"),
    N(K, c, "mlirAffineModExprGet"),
    N(K, c, "mlirAffineMulExprGet"),
    N(K, c, "mlirAffineSymbolExprGet"),
    N(K, c, "mlirAffineSymbolExprGetPosition"),
    N(K, c, "mlirAnyQuantizedTypeGet"),
    N(K, c, "mlirArrayAttrGet"),
    N(K, c, "mlirArrayAttrGetElement"),
    N(K, c, "mlirArrayAttrGetNumElements"),
    N(K, c, "mlirArrayAttrGetTypeID"),
    N(K, c, "mlirAsmStateCreateForOperation"),
    N(K, c, "mlirAsmStateCreateForValue"),
    N(K, c, "mlirAsmStateDestroy"),
    N(K, c, "mlirAttributeDump"),
    N(K, c, "mlirAttributeEqual"),
    N(K, c, "mlirAttributeGetContext"),
    N(K, c, "mlirAttributeGetDialect"),
    N(K, c, "mlirAttributeGetNull"),
    N(K, c, "mlirAttributeGetType"),
    N(K, c, "mlirAttributeGetTypeID"),
    N(K, c, "mlirAttributeIsAAffineMap"),
    N(K, c, "mlirAttributeIsAArray"),
    N(K, c, "mlirAttributeIsABool"),
    N(K, c, "mlirAttributeIsADenseBoolArray"),
    N(K, c, "mlirAttributeIsADenseElements"),
    N(K, c, "mlirAttributeIsADenseF32Array"),
    N(K, c, "mlirAttributeIsADenseF64Array"),
    N(K, c, "mlirAttributeIsADenseFPElements"),
    N(K, c, "mlirAttributeIsADenseI16Array"),
    N(K, c, "mlirAttributeIsADenseI32Array"),
    N(K, c, "mlirAttributeIsADenseI64Array"),
    N(K, c, "mlirAttributeIsADenseI8Array"),
    N(K, c, "mlirAttributeIsADenseIntElements"),
    N(K, c, "mlirAttributeIsADenseResourceElements"),
    N(K, c, "mlirAttributeIsADictionary"),
    N(K, c, "mlirAttributeIsAElements"),
    N(K, c, "mlirAttributeIsAFlatSymbolRef"),
    N(K, c, "mlirAttributeIsAFloat"),
    N(K, c, "mlirAttributeIsAInteger"),
    N(K, c, "mlirAttributeIsAIntegerSet"),
    N(K, c, "mlirAttributeIsALocation"),
    N(K, c, "mlirAttributeIsAOpaque"),
    N(K, c, "mlirAttributeIsASparseElements"),
    N(K, c, "mlirAttributeIsASparseTensorEncodingAttr"),
    N(K, c, "mlirAttributeIsAStridedLayout"),
    N(K, c, "mlirAttributeIsAString"),
    N(K, c, "mlirAttributeIsASymbolRef"),
    N(K, c, "mlirAttributeIsAType"),
    N(K, c, "mlirAttributeIsAUnit"),
    N(K, c, "mlirAttributeParseGet"),
    N(K, c, "mlirAttributePrint"),
    N(K, c, "mlirBF16TypeGet"),
    N(K, c, "mlirBFloat16TypeGetTypeID"),
    N(K, c, "mlirBlockAddArgument"),
    N(K, c, "mlirBlockAppendOwnedOperation"),
    N(K, c, "mlirBlockArgumentGetArgNumber"),
    N(K, c, "mlirBlockArgumentGetOwner"),
    N(K, c, "mlirBlockArgumentSetType"),
    N(K, c, "mlirBlockCreate"),
    N(K, c, "mlirBlockDestroy"),
    N(K, c, "mlirBlockDetach"),
    N(K, c, "mlirBlockEqual"),
    N(K, c, "mlirBlockGetArgument"),
    N(K, c, "mlirBlockGetFirstOperation"),
    N(K, c, "mlirBlockGetNextInRegion"),
    N(K, c, "mlirBlockGetNumArguments"),
    N(K, c, "mlirBlockGetParentOperation"),
    N(K, c, "mlirBlockGetParentRegion"),
    N(K, c, "mlirBlockGetTerminator"),
    N(K, c, "mlirBlockInsertArgument"),
    N(K, c, "mlirBlockInsertOwnedOperation"),
    N(K, c, "mlirBlockInsertOwnedOperationAfter"),
    N(K, c, "mlirBlockInsertOwnedOperationBefore"),
    N(K, c, "mlirBlockPrint"),
    N(K, c, "mlirBoolAttrGet"),
    N(K, c, "mlirBoolAttrGetValue"),
    N(K, c, "mlirBytecodeWriterConfigCreate"),
    N(K, c, "mlirBytecodeWriterConfigDesiredEmitVersion"),
    N(K, c, "mlirBytecodeWriterConfigDestroy"),
    N(K, c, "mlirCalibratedQuantizedTypeGet"),
    N(K, c, "mlirCalibratedQuantizedTypeGetMax"),
    N(K, c, "mlirCalibratedQuantizedTypeGetMin"),
    N(K, c, "mlirComplexTypeGet"),
    N(K, c, "mlirComplexTypeGetElementType"),
    N(K, c, "mlirComplexTypeGetTypeID"),
    N(K, c, "mlirContextAppendDialectRegistry"),
    N(K, c, "mlirContextAttachDiagnosticHandler"),
    N(K, c, "mlirContextCreate"),
    N(K, c, "mlirContextCreateWithRegistry"),
    N(K, c, "mlirContextCreateWithThreading"),
    N(K, c, "mlirContextDestroy"),
    N(K, c, "mlirContextDetachDiagnosticHandler"),
    N(K, c, "mlirContextEnableMultithreading"),
    N(K, c, "mlirContextEqual"),
    N(K, c, "mlirContextGetAllowUnregisteredDialects"),
    N(K, c, "mlirContextGetNumLoadedDialects"),
    N(K, c, "mlirContextGetNumRegisteredDialects"),
    N(K, c, "mlirContextGetOrLoadDialect"),
    N(K, c, "mlirContextIsRegisteredOperation"),
    N(K, c, "mlirContextLoadAllAvailableDialects"),
    N(K, c, "mlirContextSetAllowUnregisteredDialects"),
    N(K, c, "mlirContextSetThreadPool"),
    N(K, c, "mlirCreateAsyncAsyncFuncToAsyncRuntime"),
    N(K, c, "mlirCreateAsyncAsyncParallelFor"),
    N(K, c, "mlirCreateAsyncAsyncRuntimePolicyBasedRefCounting"),
    N(K, c, "mlirCreateAsyncAsyncRuntimeRefCounting"),
    N(K, c, "mlirCreateAsyncAsyncRuntimeRefCountingOpt"),
    N(K, c, "mlirCreateAsyncAsyncToAsyncRuntime"),
    N(K, c, "mlirCreateConversionArithToAMDGPUConversionPass"),
    N(K, c, "mlirCreateConversionArithToLLVMConversionPass"),
    N(K, c, "mlirCreateConversionConvertAMDGPUToROCDL"),
    N(K, c, "mlirCreateConversionConvertAffineForToGPU"),
    N(K, c, "mlirCreateConversionConvertAffineToStandard"),
    N(K, c, "mlirCreateConversionConvertArithToSPIRV"),
    N(K, c, "mlirCreateConversionConvertArmNeon2dToIntr"),
    N(K, c, "mlirCreateConversionConvertArmSMEToLLVM"),
    N(K, c, "mlirCreateConversionConvertArmSMEToSCF"),
    N(K, c, "mlirCreateConversionConvertAsyncToLLVMPass"),
    N(K, c, "mlirCreateConversionConvertBufferizationToMemRef"),
    N(K, c, "mlirCreateConversionConvertComplexToLLVMPass"),
    N(K, c, "mlirCreateConversionConvertComplexToLibm"),
    N(K, c, "mlirCreateConversionConvertComplexToSPIRVPass"),
    N(K, c, "mlirCreateConversionConvertComplexToStandard"),
    N(K, c, "mlirCreateConversionConvertControlFlowToLLVMPass"),
    N(K, c, "mlirCreateConversionConvertControlFlowToSPIRV"),
    N(K, c, "mlirCreateConversionConvertFuncToLLVMPass"),
    N(K, c, "mlirCreateConversionConvertFuncToSPIRV"),
    N(K, c, "mlirCreateConversionConvertGPUToSPIRV"),
    N(K, c, "mlirCreateConversionConvertGpuLaunchFuncToVulkanLaunchFunc"),
    N(K, c, "mlirCreateConversionConvertGpuOpsToNVVMOps"),
    N(K, c, "mlirCreateConversionConvertGpuOpsToROCDLOps"),
    N(K, c, "mlirCreateConversionConvertIndexToLLVMPass"),
    N(K, c, "mlirCreateConversionConvertIndexToSPIRVPass"),
    N(K, c, "mlirCreateConversionConvertLinalgToStandard"),
    N(K, c, "mlirCreateConversionConvertMathToFuncs"),
    N(K, c, "mlirCreateConversionConvertMathToLLVMPass"),
    N(K, c, "mlirCreateConversionConvertMathToLibm"),
    N(K, c, "mlirCreateConversionConvertMathToSPIRV"),
    N(K, c, "mlirCreateConversionConvertMemRefToSPIRV"),
    N(K, c, "mlirCreateConversionConvertNVGPUToNVVMPass"),
    N(K, c, "mlirCreateConversionConvertNVVMToLLVMPass"),
    N(K, c, "mlirCreateConversionConvertOpenACCToSCF"),
    N(K, c, "mlirCreateConversionConvertOpenMPToLLVMPass"),
    N(K, c, "mlirCreateConversionConvertPDLToPDLInterp"),
    N(K, c, "mlirCreateConversionConvertParallelLoopToGpu"),
    N(K, c, "mlirCreateConversionConvertSCFToOpenMPPass"),
    N(K, c, "mlirCreateConversionConvertSPIRVToLLVMPass"),
    N(K, c, "mlirCreateConversionConvertShapeConstraints"),
    N(K, c, "mlirCreateConversionConvertShapeToStandard"),
    N(K, c, "mlirCreateConversionConvertTensorToLinalg"),
    N(K, c, "mlirCreateConversionConvertTensorToSPIRV"),
    N(K, c, "mlirCreateConversionConvertToLLVMPass"),
    N(K, c, "mlirCreateConversionConvertVectorToArmSME"),
    N(K, c, "mlirCreateConversionConvertVectorToGPU"),
    N(K, c, "mlirCreateConversionConvertVectorToLLVMPass"),
    N(K, c, "mlirCreateConversionConvertVectorToSCF"),
    N(K, c, "mlirCreateConversionConvertVectorToSPIRV"),
    N(K, c, "mlirCreateConversionConvertVulkanLaunchFuncToVulkanCallsPass"),
    N(K, c, "mlirCreateConversionFinalizeMemRefToLLVMConversionPass"),
    N(K, c, "mlirCreateConversionGpuToLLVMConversionPass"),
    N(K, c, "mlirCreateConversionLiftControlFlowToSCFPass"),
    N(K, c, "mlirCreateConversionLowerHostCodeToLLVMPass"),
    N(K, c, "mlirCreateConversionMapMemRefStorageClass"),
    N(K, c, "mlirCreateConversionReconcileUnrealizedCasts"),
    N(K, c, "mlirCreateConversionSCFToControlFlow"),
    N(K, c, "mlirCreateConversionSCFToEmitC"),
    N(K, c, "mlirCreateConversionSCFToSPIRV"),
    N(K, c, "mlirCreateConversionSetLLVMModuleDataLayoutPass"),
    N(K, c, "mlirCreateConversionTosaToArith"),
    N(K, c, "mlirCreateConversionTosaToLinalg"),
    N(K, c, "mlirCreateConversionTosaToLinalgNamed"),
    N(K, c, "mlirCreateConversionTosaToMLProgram"),
    N(K, c, "mlirCreateConversionTosaToSCF"),
    N(K, c, "mlirCreateConversionTosaToTensor"),
    N(K, c, "mlirCreateConversionUBToLLVMConversionPass"),
    N(K, c, "mlirCreateConversionUBToSPIRVConversionPass"),
    N(K, c, "mlirCreateExternalPass"),
    N(K, c, "mlirCreateGPUGpuAsyncRegionPass"),
    N(K, c, "mlirCreateGPUGpuDecomposeMemrefsPass"),
    N(K, c, "mlirCreateGPUGpuEliminateBarriers"),
    N(K, c, "mlirCreateGPUGpuKernelOutlining"),
    N(K, c, "mlirCreateGPUGpuLaunchSinkIndexComputations"),
    N(K, c, "mlirCreateGPUGpuMapParallelLoopsPass"),
    N(K, c, "mlirCreateGPUGpuModuleToBinaryPass"),
    N(K, c, "mlirCreateGPUGpuNVVMAttachTarget"),
    N(K, c, "mlirCreateGPUGpuROCDLAttachTarget"),
    N(K, c, "mlirCreateGPUGpuSPIRVAttachTarget"),
    N(K, c, "mlirCreateLinalgConvertElementwiseToLinalg"),
    N(K, c, "mlirCreateLinalgLinalgBufferize"),
    N(K, c, "mlirCreateLinalgLinalgDetensorize"),
    N(K, c, "mlirCreateLinalgLinalgElementwiseOpFusion"),
    N(K, c, "mlirCreateLinalgLinalgFoldUnitExtentDims"),
    N(K, c, "mlirCreateLinalgLinalgGeneralization"),
    N(K, c, "mlirCreateLinalgLinalgInlineScalarOperands"),
    N(K, c, "mlirCreateLinalgLinalgLowerToAffineLoops"),
    N(K, c, "mlirCreateLinalgLinalgLowerToLoops"),
    N(K, c, "mlirCreateLinalgLinalgLowerToParallelLoops"),
    N(K, c, "mlirCreateLinalgLinalgNamedOpConversion"),
    N(K, c, "mlirCreateSparseTensorLowerForeachToSCF"),
    N(K, c, "mlirCreateSparseTensorLowerSparseOpsToForeach"),
    N(K, c, "mlirCreateSparseTensorPreSparsificationRewrite"),
    N(K, c, "mlirCreateSparseTensorSparseBufferRewrite"),
    N(K, c, "mlirCreateSparseTensorSparseGPUCodegen"),
    N(K, c, "mlirCreateSparseTensorSparseReinterpretMap"),
    N(K, c, "mlirCreateSparseTensorSparseTensorCodegen"),
    N(K, c, "mlirCreateSparseTensorSparseTensorConversionPass"),
    N(K, c, "mlirCreateSparseTensorSparseVectorization"),
    N(K, c, "mlirCreateSparseTensorSparsificationAndBufferization"),
    N(K, c, "mlirCreateSparseTensorSparsificationPass"),
    N(K, c, "mlirCreateSparseTensorStageSparseOperations"),
    N(K, c, "mlirCreateSparseTensorStorageSpecifierToLLVM"),
    N(K, c, "mlirCreateTransformsCSE"),
    N(K, c, "mlirCreateTransformsCanonicalizer"),
    N(K, c, "mlirCreateTransformsControlFlowSink"),
    N(K, c, "mlirCreateTransformsGenerateRuntimeVerification"),
    N(K, c, "mlirCreateTransformsInliner"),
    N(K, c, "mlirCreateTransformsLocationSnapshot"),
    N(K, c, "mlirCreateTransformsLoopInvariantCodeMotion"),
    N(K, c, "mlirCreateTransformsLoopInvariantSubsetHoisting"),
    N(K, c, "mlirCreateTransformsMem2Reg"),
    N(K, c, "mlirCreateTransformsPrintIRPass"),
    N(K, c, "mlirCreateTransformsPrintOpStats"),
    N(K, c, "mlirCreateTransformsRemoveDeadValues"),
    N(K, c, "mlirCreateTransformsSCCP"),
    N(K, c, "mlirCreateTransformsSROA"),
    N(K, c, "mlirCreateTransformsStripDebugInfo"),
    N(K, c, "mlirCreateTransformsSymbolDCE"),
    N(K, c, "mlirCreateTransformsSymbolPrivatize"),
    N(K, c, "mlirCreateTransformsTopologicalSort"),
    N(K, c, "mlirCreateTransformsViewOpGraph"),
    N(K, c, "mlirDenseArrayAttrGetTypeID"),
    N(K, c, "mlirDenseArrayGetNumElements"),
    N(K, c, "mlirDenseBoolArrayGet"),
    N(K, c, "mlirDenseBoolArrayGetElement"),
    N(K, c, "mlirDenseBoolResourceElementsAttrGetValue"),
    N(K, c, "mlirDenseDoubleResourceElementsAttrGetValue"),
    N(K, c, "mlirDenseElementsAttrBFloat16Get"),
    N(K, c, "mlirDenseElementsAttrBoolGet"),
    N(K, c, "mlirDenseElementsAttrBoolSplatGet"),
    N(K, c, "mlirDenseElementsAttrDoubleGet"),
    N(K, c, "mlirDenseElementsAttrDoubleSplatGet"),
    N(K, c, "mlirDenseElementsAttrFloat16Get"),
    N(K, c, "mlirDenseElementsAttrFloatGet"),
    N(K, c, "mlirDenseElementsAttrFloatSplatGet"),
    N(K, c, "mlirDenseElementsAttrGet"),
    N(K, c, "mlirDenseElementsAttrGetBoolSplatValue"),
    N(K, c, "mlirDenseElementsAttrGetBoolValue"),
    N(K, c, "mlirDenseElementsAttrGetDoubleSplatValue"),
    N(K, c, "mlirDenseElementsAttrGetDoubleValue"),
    N(K, c, "mlirDenseElementsAttrGetFloatSplatValue"),
    N(K, c, "mlirDenseElementsAttrGetFloatValue"),
    N(K, c, "mlirDenseElementsAttrGetInt16Value"),
    N(K, c, "mlirDenseElementsAttrGetInt32SplatValue"),
    N(K, c, "mlirDenseElementsAttrGetInt32Value"),
    N(K, c, "mlirDenseElementsAttrGetInt64SplatValue"),
    N(K, c, "mlirDenseElementsAttrGetInt64Value"),
    N(K, c, "mlirDenseElementsAttrGetInt8SplatValue"),
    N(K, c, "mlirDenseElementsAttrGetInt8Value"),
    N(K, c, "mlirDenseElementsAttrGetRawData"),
    N(K, c, "mlirDenseElementsAttrGetSplatValue"),
    N(K, c, "mlirDenseElementsAttrGetStringSplatValue"),
    N(K, c, "mlirDenseElementsAttrGetStringValue"),
    N(K, c, "mlirDenseElementsAttrGetUInt16Value"),
    N(K, c, "mlirDenseElementsAttrGetUInt32SplatValue"),
    N(K, c, "mlirDenseElementsAttrGetUInt32Value"),
    N(K, c, "mlirDenseElementsAttrGetUInt64SplatValue"),
    N(K, c, "mlirDenseElementsAttrGetUInt64Value"),
    N(K, c, "mlirDenseElementsAttrGetUInt8SplatValue"),
    N(K, c, "mlirDenseElementsAttrGetUInt8Value"),
    N(K, c, "mlirDenseElementsAttrInt16Get"),
    N(K, c, "mlirDenseElementsAttrInt32Get"),
    N(K, c, "mlirDenseElementsAttrInt32SplatGet"),
    N(K, c, "mlirDenseElementsAttrInt64Get"),
    N(K, c, "mlirDenseElementsAttrInt64SplatGet"),
    N(K, c, "mlirDenseElementsAttrInt8Get"),
    N(K, c, "mlirDenseElementsAttrInt8SplatGet"),
    N(K, c, "mlirDenseElementsAttrIsSplat"),
    N(K, c, "mlirDenseElementsAttrRawBufferGet"),
    N(K, c, "mlirDenseElementsAttrReshapeGet"),
    N(K, c, "mlirDenseElementsAttrSplatGet"),
    N(K, c, "mlirDenseElementsAttrStringGet"),
    N(K, c, "mlirDenseElementsAttrUInt16Get"),
    N(K, c, "mlirDenseElementsAttrUInt32Get"),
    N(K, c, "mlirDenseElementsAttrUInt32SplatGet"),
    N(K, c, "mlirDenseElementsAttrUInt64Get"),
    N(K, c, "mlirDenseElementsAttrUInt64SplatGet"),
    N(K, c, "mlirDenseElementsAttrUInt8Get"),
    N(K, c, "mlirDenseElementsAttrUInt8SplatGet"),
    N(K, c, "mlirDenseF32ArrayGet"),
    N(K, c, "mlirDenseF32ArrayGetElement"),
    N(K, c, "mlirDenseF64ArrayGet"),
    N(K, c, "mlirDenseF64ArrayGetElement"),
    N(K, c, "mlirDenseFloatResourceElementsAttrGetValue"),
    N(K, c, "mlirDenseI16ArrayGet"),
    N(K, c, "mlirDenseI16ArrayGetElement"),
    N(K, c, "mlirDenseI32ArrayGet"),
    N(K, c, "mlirDenseI32ArrayGetElement"),
    N(K, c, "mlirDenseI64ArrayGet"),
    N(K, c, "mlirDenseI64ArrayGetElement"),
    N(K, c, "mlirDenseI8ArrayGet"),
    N(K, c, "mlirDenseI8ArrayGetElement"),
    N(K, c, "mlirDenseInt16ResourceElementsAttrGetValue"),
    N(K, c, "mlirDenseInt32ResourceElementsAttrGetValue"),
    N(K, c, "mlirDenseInt64ResourceElementsAttrGetValue"),
    N(K, c, "mlirDenseInt8ResourceElementsAttrGetValue"),
    N(K, c, "mlirDenseIntOrFPElementsAttrGetTypeID"),
    N(K, c, "mlirDenseUInt16ResourceElementsAttrGetValue"),
    N(K, c, "mlirDenseUInt32ResourceElementsAttrGetValue"),
    N(K, c, "mlirDenseUInt64ResourceElementsAttrGetValue"),
    N(K, c, "mlirDenseUInt8ResourceElementsAttrGetValue"),
    N(K, c, "mlirDiagnosticGetLocation"),
    N(K, c, "mlirDiagnosticGetNote"),
    N(K, c, "mlirDiagnosticGetNumNotes"),
    N(K, c, "mlirDiagnosticGetSeverity"),
    N(K, c, "mlirDiagnosticPrint"),
    N(K, c, "mlirDialectEqual"),
    N(K, c, "mlirDialectGetContext"),
    N(K, c, "mlirDialectGetNamespace"),
    N(K, c, "mlirDialectHandleGetNamespace"),
    N(K, c, "mlirDialectHandleInsertDialect"),
    N(K, c, "mlirDialectHandleLoadDialect"),
    N(K, c, "mlirDialectHandleRegisterDialect"),
    N(K, c, "mlirDialectRegistryCreate"),
    N(K, c, "mlirDialectRegistryDestroy"),
    N(K, c, "mlirDictionaryAttrGet"),
    N(K, c, "mlirDictionaryAttrGetElement"),
    N(K, c, "mlirDictionaryAttrGetElementByName"),
    N(K, c, "mlirDictionaryAttrGetNumElements"),
    N(K, c, "mlirDictionaryAttrGetTypeID"),
    N(K, c, "mlirElementsAttrGetNumElements"),
    N(K, c, "mlirElementsAttrGetValue"),
    N(K, c, "mlirElementsAttrIsValidIndex"),
    N(K, c, "mlirEmitError"),
    N(K, c, "mlirEnableGlobalDebug"),
    N(K, c, "mlirExecutionEngineCreate"),
    N(K, c, "mlirExecutionEngineDestroy"),
    N(K, c, "mlirExecutionEngineDumpToObjectFile"),
    N(K, c, "mlirExecutionEngineInvokePacked"),
    N(K, c, "mlirExecutionEngineLookup"),
    N(K, c, "mlirExecutionEngineLookupPacked"),
    N(K, c, "mlirExecutionEngineRegisterSymbol"),
    N(K, c, "mlirExternalPassSignalFailure"),
    N(K, c, "mlirF16TypeGet"),
    N(K, c, "mlirF32TypeGet"),
    N(K, c, "mlirF64TypeGet"),
    N(K, c, "mlirFlatSymbolRefAttrGet"),
    N(K, c, "mlirFlatSymbolRefAttrGetValue"),
    N(K, c, "mlirFloat16TypeGetTypeID"),
    N(K, c, "mlirFloat32TypeGetTypeID"),
    N(K, c, "mlirFloat64TypeGetTypeID"),
    N(K, c, "mlirFloat8E4M3B11FNUZTypeGet"),
    N(K, c, "mlirFloat8E4M3B11FNUZTypeGetTypeID"),
    N(K, c, "mlirFloat8E4M3FNTypeGet"),
    N(K, c, "mlirFloat8E4M3FNTypeGetTypeID"),
    N(K, c, "mlirFloat8E4M3FNUZTypeGet"),
    N(K, c, "mlirFloat8E4M3FNUZTypeGetTypeID"),
    N(K, c, "mlirFloat8E5M2FNUZTypeGet"),
    N(K, c, "mlirFloat8E5M2FNUZTypeGetTypeID"),
    N(K, c, "mlirFloat8E5M2TypeGet"),
    N(K, c, "mlirFloat8E5M2TypeGetTypeID"),
    N(K, c, "mlirFloatAttrDoubleGet"),
    N(K, c, "mlirFloatAttrDoubleGetChecked"),
    N(K, c, "mlirFloatAttrGetTypeID"),
    N(K, c, "mlirFloatAttrGetValueDouble"),
    N(K, c, "mlirFloatTF32TypeGetTypeID"),
    N(K, c, "mlirFuncSetArgAttr"),
    N(K, c, "mlirFunctionTypeGet"),
    N(K, c, "mlirFunctionTypeGetInput"),
    N(K, c, "mlirFunctionTypeGetNumInputs"),
    N(K, c, "mlirFunctionTypeGetNumResults"),
    N(K, c, "mlirFunctionTypeGetResult"),
    N(K, c, "mlirFunctionTypeGetTypeID"),
    N(K, c, "mlirGetDialectHandle__async__"),
    N(K, c, "mlirGetDialectHandle__cf__"),
    N(K, c, "mlirGetDialectHandle__elixir__"),
    N(K, c, "mlirGetDialectHandle__func__"),
    N(K, c, "mlirGetDialectHandle__gpu__"),
    N(K, c, "mlirGetDialectHandle__linalg__"),
    N(K, c, "mlirGetDialectHandle__llvm__"),
    N(K, c, "mlirGetDialectHandle__pdl__"),
    N(K, c, "mlirGetDialectHandle__quant__"),
    N(K, c, "mlirGetDialectHandle__scf__"),
    N(K, c, "mlirGetDialectHandle__shape__"),
    N(K, c, "mlirGetDialectHandle__sparse_tensor__"),
    N(K, c, "mlirGetDialectHandle__tensor__"),
    N(K, c, "mlirIdentifierEqual"),
    N(K, c, "mlirIdentifierGet"),
    N(K, c, "mlirIdentifierGetContext"),
    N(K, c, "mlirIdentifierStr"),
    N(K, c, "mlirIndexTypeGet"),
    N(K, c, "mlirIndexTypeGetTypeID"),
    N(K, c, "mlirInferShapedTypeOpInterfaceInferReturnTypes"),
    N(K, c, "mlirInferShapedTypeOpInterfaceTypeID"),
    N(K, c, "mlirInferTypeOpInterfaceInferReturnTypes"),
    N(K, c, "mlirInferTypeOpInterfaceTypeID"),
    N(K, c, "mlirIntegerAttrGet"),
    N(K, c, "mlirIntegerAttrGetTypeID"),
    N(K, c, "mlirIntegerAttrGetValueInt"),
    N(K, c, "mlirIntegerAttrGetValueSInt"),
    N(K, c, "mlirIntegerAttrGetValueUInt"),
    N(K, c, "mlirIntegerSetAttrGetTypeID"),
    N(K, c, "mlirIntegerSetDump"),
    N(K, c, "mlirIntegerSetEmptyGet"),
    N(K, c, "mlirIntegerSetEqual"),
    N(K, c, "mlirIntegerSetGet"),
    N(K, c, "mlirIntegerSetGetConstraint"),
    N(K, c, "mlirIntegerSetGetContext"),
    N(K, c, "mlirIntegerSetGetNumConstraints"),
    N(K, c, "mlirIntegerSetGetNumDims"),
    N(K, c, "mlirIntegerSetGetNumEqualities"),
    N(K, c, "mlirIntegerSetGetNumInequalities"),
    N(K, c, "mlirIntegerSetGetNumInputs"),
    N(K, c, "mlirIntegerSetGetNumSymbols"),
    N(K, c, "mlirIntegerSetIsCanonicalEmpty"),
    N(K, c, "mlirIntegerSetIsConstraintEq"),
    N(K, c, "mlirIntegerSetPrint"),
    N(K, c, "mlirIntegerSetReplaceGet"),
    N(K, c, "mlirIntegerTypeGet"),
    N(K, c, "mlirIntegerTypeGetTypeID"),
    N(K, c, "mlirIntegerTypeGetWidth"),
    N(K, c, "mlirIntegerTypeIsSigned"),
    N(K, c, "mlirIntegerTypeIsSignless"),
    N(K, c, "mlirIntegerTypeIsUnsigned"),
    N(K, c, "mlirIntegerTypeSignedGet"),
    N(K, c, "mlirIntegerTypeUnsignedGet"),
    N(K, c, "mlirIsGlobalDebugEnabled"),
    N(K, c, "mlirLLVMArrayTypeGet"),
    N(K, c, "mlirLLVMFunctionTypeGet"),
    N(K, c, "mlirLLVMPointerTypeGet"),
    N(K, c, "mlirLLVMStructTypeLiteralGet"),
    N(K, c, "mlirLLVMVoidTypeGet"),
    N(K, c, "mlirLinalgFillBuiltinNamedOpRegion"),
    N(K, c, "mlirLlvmThreadPoolCreate"),
    N(K, c, "mlirLlvmThreadPoolDestroy"),
    N(K, c, "mlirLocationCallSiteGet"),
    N(K, c, "mlirLocationEqual"),
    N(K, c, "mlirLocationFileLineColGet"),
    N(K, c, "mlirLocationFromAttribute"),
    N(K, c, "mlirLocationFusedGet"),
    N(K, c, "mlirLocationGetAttribute"),
    N(K, c, "mlirLocationGetContext"),
    N(K, c, "mlirLocationNameGet"),
    N(K, c, "mlirLocationPrint"),
    N(K, c, "mlirLocationUnknownGet"),
    N(K, c, "mlirMemRefTypeContiguousGet"),
    N(K, c, "mlirMemRefTypeContiguousGetChecked"),
    N(K, c, "mlirMemRefTypeGet"),
    N(K, c, "mlirMemRefTypeGetAffineMap"),
    N(K, c, "mlirMemRefTypeGetChecked"),
    N(K, c, "mlirMemRefTypeGetLayout"),
    N(K, c, "mlirMemRefTypeGetMemorySpace"),
    N(K, c, "mlirMemRefTypeGetTypeID"),
    N(K, c, "mlirModuleCreateEmpty"),
    N(K, c, "mlirModuleCreateParse"),
    N(K, c, "mlirModuleDestroy"),
    N(K, c, "mlirModuleFromOperation"),
    N(K, c, "mlirModuleGetBody"),
    N(K, c, "mlirModuleGetContext"),
    N(K, c, "mlirModuleGetOperation"),
    N(K, c, "mlirNamedAttributeGet"),
    N(K, c, "mlirNoneTypeGet"),
    N(K, c, "mlirNoneTypeGetTypeID"),
    N(K, c, "mlirOpOperandGetNextUse"),
    N(K, c, "mlirOpOperandGetOperandNumber"),
    N(K, c, "mlirOpOperandGetOwner"),
    N(K, c, "mlirOpOperandGetValue"),
    N(K, c, "mlirOpOperandIsNull"),
    N(K, c, "mlirOpPassManagerAddOwnedPass"),
    N(K, c, "mlirOpPassManagerAddPipeline"),
    N(K, c, "mlirOpPassManagerGetNestedUnder"),
    N(K, c, "mlirOpPrintingFlagsAssumeVerified"),
    N(K, c, "mlirOpPrintingFlagsCreate"),
    N(K, c, "mlirOpPrintingFlagsDestroy"),
    N(K, c, "mlirOpPrintingFlagsElideLargeElementsAttrs"),
    N(K, c, "mlirOpPrintingFlagsEnableDebugInfo"),
    N(K, c, "mlirOpPrintingFlagsPrintGenericOpForm"),
    N(K, c, "mlirOpPrintingFlagsUseLocalScope"),
    N(K, c, "mlirOpResultGetOwner"),
    N(K, c, "mlirOpResultGetResultNumber"),
    N(K, c, "mlirOpaqueAttrGet"),
    N(K, c, "mlirOpaqueAttrGetData"),
    N(K, c, "mlirOpaqueAttrGetDialectNamespace"),
    N(K, c, "mlirOpaqueAttrGetTypeID"),
    N(K, c, "mlirOpaqueTypeGet"),
    N(K, c, "mlirOpaqueTypeGetData"),
    N(K, c, "mlirOpaqueTypeGetDialectNamespace"),
    N(K, c, "mlirOpaqueTypeGetTypeID"),
    N(K, c, "mlirOperationClone"),
    N(K, c, "mlirOperationCreate"),
    N(K, c, "mlirOperationCreateParse"),
    N(K, c, "mlirOperationDestroy"),
    N(K, c, "mlirOperationDump"),
    N(K, c, "mlirOperationEqual"),
    N(K, c, "mlirOperationGetAttribute"),
    N(K, c, "mlirOperationGetAttributeByName"),
    N(K, c, "mlirOperationGetBlock"),
    N(K, c, "mlirOperationGetContext"),
    N(K, c, "mlirOperationGetDiscardableAttribute"),
    N(K, c, "mlirOperationGetDiscardableAttributeByName"),
    N(K, c, "mlirOperationGetFirstRegion"),
    N(K, c, "mlirOperationGetInherentAttributeByName"),
    N(K, c, "mlirOperationGetLocation"),
    N(K, c, "mlirOperationGetName"),
    N(K, c, "mlirOperationGetNextInBlock"),
    N(K, c, "mlirOperationGetNumAttributes"),
    N(K, c, "mlirOperationGetNumDiscardableAttributes"),
    N(K, c, "mlirOperationGetNumOperands"),
    N(K, c, "mlirOperationGetNumRegions"),
    N(K, c, "mlirOperationGetNumResults"),
    N(K, c, "mlirOperationGetNumSuccessors"),
    N(K, c, "mlirOperationGetOperand"),
    N(K, c, "mlirOperationGetParentOperation"),
    N(K, c, "mlirOperationGetRegion"),
    N(K, c, "mlirOperationGetResult"),
    N(K, c, "mlirOperationGetSuccessor"),
    N(K, c, "mlirOperationGetTypeID"),
    N(K, c, "mlirOperationHasInherentAttributeByName"),
    N(K, c, "mlirOperationImplementsInterface"),
    N(K, c, "mlirOperationImplementsInterfaceStatic"),
    N(K, c, "mlirOperationMoveAfter"),
    N(K, c, "mlirOperationMoveBefore"),
    N(K, c, "mlirOperationPrint"),
    N(K, c, "mlirOperationPrintWithFlags"),
    N(K, c, "mlirOperationPrintWithState"),
    N(K, c, "mlirOperationRemoveAttributeByName"),
    N(K, c, "mlirOperationRemoveDiscardableAttributeByName"),
    N(K, c, "mlirOperationRemoveFromParent"),
    N(K, c, "mlirOperationSetAttributeByName"),
    N(K, c, "mlirOperationSetDiscardableAttributeByName"),
    N(K, c, "mlirOperationSetInherentAttributeByName"),
    N(K, c, "mlirOperationSetOperand"),
    N(K, c, "mlirOperationSetOperands"),
    N(K, c, "mlirOperationSetSuccessor"),
    N(K, c, "mlirOperationStateAddAttributes"),
    N(K, c, "mlirOperationStateAddOperands"),
    N(K, c, "mlirOperationStateAddOwnedRegions"),
    N(K, c, "mlirOperationStateAddResults"),
    N(K, c, "mlirOperationStateAddSuccessors"),
    N(K, c, "mlirOperationStateEnableResultTypeInference"),
    N(K, c, "mlirOperationStateGet"),
    N(K, c, "mlirOperationVerify"),
    N(K, c, "mlirOperationWalk"),
    N(K, c, "mlirOperationWriteBytecode"),
    N(K, c, "mlirOperationWriteBytecodeWithConfig"),
    N(K, c, "mlirPDLAttributeTypeGet"),
    N(K, c, "mlirPDLOperationTypeGet"),
    N(K, c, "mlirPDLRangeTypeGet"),
    N(K, c, "mlirPDLRangeTypeGetElementType"),
    N(K, c, "mlirPDLTypeTypeGet"),
    N(K, c, "mlirPDLValueTypeGet"),
    N(K, c, "mlirParsePassPipeline"),
    N(K, c, "mlirPassManagerAddOwnedPass"),
    N(K, c, "mlirPassManagerCreate"),
    N(K, c, "mlirPassManagerCreateOnOperation"),
    N(K, c, "mlirPassManagerDestroy"),
    N(K, c, "mlirPassManagerEnableIRPrinting"),
    N(K, c, "mlirPassManagerEnableVerifier"),
    N(K, c, "mlirPassManagerGetAsOpPassManager"),
    N(K, c, "mlirPassManagerGetNestedUnder"),
    L(K, c, "mlirPassManagerRunOnOp"),
    N(K, c, "mlirPrintPassPipeline"),
    N(K, c, "mlirQuantizedTypeCastExpressedToStorageType"),
    N(K, c, "mlirQuantizedTypeCastFromExpressedType"),
    N(K, c, "mlirQuantizedTypeCastFromStorageType"),
    N(K, c, "mlirQuantizedTypeCastToExpressedType"),
    N(K, c, "mlirQuantizedTypeCastToStorageType"),
    N(K, c, "mlirQuantizedTypeGetDefaultMaximumForInteger"),
    N(K, c, "mlirQuantizedTypeGetDefaultMinimumForInteger"),
    N(K, c, "mlirQuantizedTypeGetExpressedType"),
    N(K, c, "mlirQuantizedTypeGetFlags"),
    N(K, c, "mlirQuantizedTypeGetQuantizedElementType"),
    N(K, c, "mlirQuantizedTypeGetSignedFlag"),
    N(K, c, "mlirQuantizedTypeGetStorageType"),
    N(K, c, "mlirQuantizedTypeGetStorageTypeIntegralWidth"),
    N(K, c, "mlirQuantizedTypeGetStorageTypeMax"),
    N(K, c, "mlirQuantizedTypeGetStorageTypeMin"),
    N(K, c, "mlirQuantizedTypeIsCompatibleExpressedType"),
    N(K, c, "mlirQuantizedTypeIsSigned"),
    N(K, c, "mlirRankedTensorTypeGet"),
    N(K, c, "mlirRankedTensorTypeGetChecked"),
    N(K, c, "mlirRankedTensorTypeGetEncoding"),
    N(K, c, "mlirRankedTensorTypeGetTypeID"),
    N(K, c, "mlirRegionAppendOwnedBlock"),
    N(K, c, "mlirRegionCreate"),
    N(K, c, "mlirRegionDestroy"),
    N(K, c, "mlirRegionEqual"),
    N(K, c, "mlirRegionGetFirstBlock"),
    N(K, c, "mlirRegionGetNextInOperation"),
    N(K, c, "mlirRegionInsertOwnedBlock"),
    N(K, c, "mlirRegionInsertOwnedBlockAfter"),
    N(K, c, "mlirRegionInsertOwnedBlockBefore"),
    N(K, c, "mlirRegionTakeBody"),
    N(K, c, "mlirRegisterAllDialects"),
    N(K, c, "mlirRegisterAllLLVMTranslations"),
    N(K, c, "mlirRegisterAllPasses"),
    N(K, c, "mlirRegisterAsyncAsyncFuncToAsyncRuntime"),
    N(K, c, "mlirRegisterAsyncAsyncParallelFor"),
    N(K, c, "mlirRegisterAsyncAsyncRuntimePolicyBasedRefCounting"),
    N(K, c, "mlirRegisterAsyncAsyncRuntimeRefCounting"),
    N(K, c, "mlirRegisterAsyncAsyncRuntimeRefCountingOpt"),
    N(K, c, "mlirRegisterAsyncAsyncToAsyncRuntime"),
    N(K, c, "mlirRegisterAsyncPasses"),
    N(K, c, "mlirRegisterConversionArithToAMDGPUConversionPass"),
    N(K, c, "mlirRegisterConversionArithToLLVMConversionPass"),
    N(K, c, "mlirRegisterConversionConvertAMDGPUToROCDL"),
    N(K, c, "mlirRegisterConversionConvertAffineForToGPU"),
    N(K, c, "mlirRegisterConversionConvertAffineToStandard"),
    N(K, c, "mlirRegisterConversionConvertArithToSPIRV"),
    N(K, c, "mlirRegisterConversionConvertArmNeon2dToIntr"),
    N(K, c, "mlirRegisterConversionConvertArmSMEToLLVM"),
    N(K, c, "mlirRegisterConversionConvertArmSMEToSCF"),
    N(K, c, "mlirRegisterConversionConvertAsyncToLLVMPass"),
    N(K, c, "mlirRegisterConversionConvertBufferizationToMemRef"),
    N(K, c, "mlirRegisterConversionConvertComplexToLLVMPass"),
    N(K, c, "mlirRegisterConversionConvertComplexToLibm"),
    N(K, c, "mlirRegisterConversionConvertComplexToSPIRVPass"),
    N(K, c, "mlirRegisterConversionConvertComplexToStandard"),
    N(K, c, "mlirRegisterConversionConvertControlFlowToLLVMPass"),
    N(K, c, "mlirRegisterConversionConvertControlFlowToSPIRV"),
    N(K, c, "mlirRegisterConversionConvertFuncToLLVMPass"),
    N(K, c, "mlirRegisterConversionConvertFuncToSPIRV"),
    N(K, c, "mlirRegisterConversionConvertGPUToSPIRV"),
    N(K, c, "mlirRegisterConversionConvertGpuLaunchFuncToVulkanLaunchFunc"),
    N(K, c, "mlirRegisterConversionConvertGpuOpsToNVVMOps"),
    N(K, c, "mlirRegisterConversionConvertGpuOpsToROCDLOps"),
    N(K, c, "mlirRegisterConversionConvertIndexToLLVMPass"),
    N(K, c, "mlirRegisterConversionConvertIndexToSPIRVPass"),
    N(K, c, "mlirRegisterConversionConvertLinalgToStandard"),
    N(K, c, "mlirRegisterConversionConvertMathToFuncs"),
    N(K, c, "mlirRegisterConversionConvertMathToLLVMPass"),
    N(K, c, "mlirRegisterConversionConvertMathToLibm"),
    N(K, c, "mlirRegisterConversionConvertMathToSPIRV"),
    N(K, c, "mlirRegisterConversionConvertMemRefToSPIRV"),
    N(K, c, "mlirRegisterConversionConvertNVGPUToNVVMPass"),
    N(K, c, "mlirRegisterConversionConvertNVVMToLLVMPass"),
    N(K, c, "mlirRegisterConversionConvertOpenACCToSCF"),
    N(K, c, "mlirRegisterConversionConvertOpenMPToLLVMPass"),
    N(K, c, "mlirRegisterConversionConvertPDLToPDLInterp"),
    N(K, c, "mlirRegisterConversionConvertParallelLoopToGpu"),
    N(K, c, "mlirRegisterConversionConvertSCFToOpenMPPass"),
    N(K, c, "mlirRegisterConversionConvertSPIRVToLLVMPass"),
    N(K, c, "mlirRegisterConversionConvertShapeConstraints"),
    N(K, c, "mlirRegisterConversionConvertShapeToStandard"),
    N(K, c, "mlirRegisterConversionConvertTensorToLinalg"),
    N(K, c, "mlirRegisterConversionConvertTensorToSPIRV"),
    N(K, c, "mlirRegisterConversionConvertToLLVMPass"),
    N(K, c, "mlirRegisterConversionConvertVectorToArmSME"),
    N(K, c, "mlirRegisterConversionConvertVectorToGPU"),
    N(K, c, "mlirRegisterConversionConvertVectorToLLVMPass"),
    N(K, c, "mlirRegisterConversionConvertVectorToSCF"),
    N(K, c, "mlirRegisterConversionConvertVectorToSPIRV"),
    N(K, c, "mlirRegisterConversionConvertVulkanLaunchFuncToVulkanCallsPass"),
    N(K, c, "mlirRegisterConversionFinalizeMemRefToLLVMConversionPass"),
    N(K, c, "mlirRegisterConversionGpuToLLVMConversionPass"),
    N(K, c, "mlirRegisterConversionLiftControlFlowToSCFPass"),
    N(K, c, "mlirRegisterConversionLowerHostCodeToLLVMPass"),
    N(K, c, "mlirRegisterConversionMapMemRefStorageClass"),
    N(K, c, "mlirRegisterConversionPasses"),
    N(K, c, "mlirRegisterConversionReconcileUnrealizedCasts"),
    N(K, c, "mlirRegisterConversionSCFToControlFlow"),
    N(K, c, "mlirRegisterConversionSCFToEmitC"),
    N(K, c, "mlirRegisterConversionSCFToSPIRV"),
    N(K, c, "mlirRegisterConversionSetLLVMModuleDataLayoutPass"),
    N(K, c, "mlirRegisterConversionTosaToArith"),
    N(K, c, "mlirRegisterConversionTosaToLinalg"),
    N(K, c, "mlirRegisterConversionTosaToLinalgNamed"),
    N(K, c, "mlirRegisterConversionTosaToMLProgram"),
    N(K, c, "mlirRegisterConversionTosaToSCF"),
    N(K, c, "mlirRegisterConversionTosaToTensor"),
    N(K, c, "mlirRegisterConversionUBToLLVMConversionPass"),
    N(K, c, "mlirRegisterConversionUBToSPIRVConversionPass"),
    N(K, c, "mlirRegisterGPUGpuAsyncRegionPass"),
    N(K, c, "mlirRegisterGPUGpuDecomposeMemrefsPass"),
    N(K, c, "mlirRegisterGPUGpuEliminateBarriers"),
    N(K, c, "mlirRegisterGPUGpuKernelOutlining"),
    N(K, c, "mlirRegisterGPUGpuLaunchSinkIndexComputations"),
    N(K, c, "mlirRegisterGPUGpuMapParallelLoopsPass"),
    N(K, c, "mlirRegisterGPUGpuModuleToBinaryPass"),
    N(K, c, "mlirRegisterGPUGpuNVVMAttachTarget"),
    N(K, c, "mlirRegisterGPUGpuROCDLAttachTarget"),
    N(K, c, "mlirRegisterGPUGpuSPIRVAttachTarget"),
    N(K, c, "mlirRegisterGPUPasses"),
    N(K, c, "mlirRegisterLinalgConvertElementwiseToLinalg"),
    N(K, c, "mlirRegisterLinalgLinalgBufferize"),
    N(K, c, "mlirRegisterLinalgLinalgDetensorize"),
    N(K, c, "mlirRegisterLinalgLinalgElementwiseOpFusion"),
    N(K, c, "mlirRegisterLinalgLinalgFoldUnitExtentDims"),
    N(K, c, "mlirRegisterLinalgLinalgGeneralization"),
    N(K, c, "mlirRegisterLinalgLinalgInlineScalarOperands"),
    N(K, c, "mlirRegisterLinalgLinalgLowerToAffineLoops"),
    N(K, c, "mlirRegisterLinalgLinalgLowerToLoops"),
    N(K, c, "mlirRegisterLinalgLinalgLowerToParallelLoops"),
    N(K, c, "mlirRegisterLinalgLinalgNamedOpConversion"),
    N(K, c, "mlirRegisterLinalgPasses"),
    N(K, c, "mlirRegisterSparseTensorLowerForeachToSCF"),
    N(K, c, "mlirRegisterSparseTensorLowerSparseOpsToForeach"),
    N(K, c, "mlirRegisterSparseTensorPasses"),
    N(K, c, "mlirRegisterSparseTensorPreSparsificationRewrite"),
    N(K, c, "mlirRegisterSparseTensorSparseBufferRewrite"),
    N(K, c, "mlirRegisterSparseTensorSparseGPUCodegen"),
    N(K, c, "mlirRegisterSparseTensorSparseReinterpretMap"),
    N(K, c, "mlirRegisterSparseTensorSparseTensorCodegen"),
    N(K, c, "mlirRegisterSparseTensorSparseTensorConversionPass"),
    N(K, c, "mlirRegisterSparseTensorSparseVectorization"),
    N(K, c, "mlirRegisterSparseTensorSparsificationAndBufferization"),
    N(K, c, "mlirRegisterSparseTensorSparsificationPass"),
    N(K, c, "mlirRegisterSparseTensorStageSparseOperations"),
    N(K, c, "mlirRegisterSparseTensorStorageSpecifierToLLVM"),
    N(K, c, "mlirRegisterTransformsCSE"),
    N(K, c, "mlirRegisterTransformsCanonicalizer"),
    N(K, c, "mlirRegisterTransformsControlFlowSink"),
    N(K, c, "mlirRegisterTransformsGenerateRuntimeVerification"),
    N(K, c, "mlirRegisterTransformsInliner"),
    N(K, c, "mlirRegisterTransformsLocationSnapshot"),
    N(K, c, "mlirRegisterTransformsLoopInvariantCodeMotion"),
    N(K, c, "mlirRegisterTransformsLoopInvariantSubsetHoisting"),
    N(K, c, "mlirRegisterTransformsMem2Reg"),
    N(K, c, "mlirRegisterTransformsPasses"),
    N(K, c, "mlirRegisterTransformsPrintIRPass"),
    N(K, c, "mlirRegisterTransformsPrintOpStats"),
    N(K, c, "mlirRegisterTransformsRemoveDeadValues"),
    N(K, c, "mlirRegisterTransformsSCCP"),
    N(K, c, "mlirRegisterTransformsSROA"),
    N(K, c, "mlirRegisterTransformsStripDebugInfo"),
    N(K, c, "mlirRegisterTransformsSymbolDCE"),
    N(K, c, "mlirRegisterTransformsSymbolPrivatize"),
    N(K, c, "mlirRegisterTransformsTopologicalSort"),
    N(K, c, "mlirRegisterTransformsViewOpGraph"),
    N(K, c, "mlirShapedTypeGetDimSize"),
    N(K, c, "mlirShapedTypeGetDynamicSize"),
    N(K, c, "mlirShapedTypeGetDynamicStrideOrOffset"),
    N(K, c, "mlirShapedTypeGetElementType"),
    N(K, c, "mlirShapedTypeGetRank"),
    N(K, c, "mlirShapedTypeHasRank"),
    N(K, c, "mlirShapedTypeHasStaticShape"),
    N(K, c, "mlirShapedTypeIsDynamicDim"),
    N(K, c, "mlirShapedTypeIsDynamicSize"),
    N(K, c, "mlirShapedTypeIsDynamicStrideOrOffset"),
    N(K, c, "mlirSparseElementsAttrGetIndices"),
    N(K, c, "mlirSparseElementsAttrGetTypeID"),
    N(K, c, "mlirSparseElementsAttrGetValues"),
    N(K, c, "mlirSparseElementsAttribute"),
    N(K, c, "mlirSparseTensorEncodingAttrGet"),
    N(K, c, "mlirSparseTensorEncodingAttrGetCrdWidth"),
    N(K, c, "mlirSparseTensorEncodingAttrGetDimToLvl"),
    N(K, c, "mlirSparseTensorEncodingAttrGetLvlToDim"),
    N(K, c, "mlirSparseTensorEncodingAttrGetLvlType"),
    N(K, c, "mlirSparseTensorEncodingAttrGetPosWidth"),
    N(K, c, "mlirSparseTensorEncodingGetLvlRank"),
    N(K, c, "mlirStridedLayoutAttrGet"),
    N(K, c, "mlirStridedLayoutAttrGetNumStrides"),
    N(K, c, "mlirStridedLayoutAttrGetOffset"),
    N(K, c, "mlirStridedLayoutAttrGetStride"),
    N(K, c, "mlirStridedLayoutAttrGetTypeID"),
    N(K, c, "mlirStringAttrGet"),
    N(K, c, "mlirStringAttrGetTypeID"),
    N(K, c, "mlirStringAttrGetValue"),
    N(K, c, "mlirStringAttrTypedGet"),
    N(K, c, "mlirStringRefCreateFromCString"),
    N(K, c, "mlirStringRefEqual"),
    N(K, c, "mlirSymbolRefAttrGet"),
    N(K, c, "mlirSymbolRefAttrGetLeafReference"),
    N(K, c, "mlirSymbolRefAttrGetNestedReference"),
    N(K, c, "mlirSymbolRefAttrGetNumNestedReferences"),
    N(K, c, "mlirSymbolRefAttrGetRootReference"),
    N(K, c, "mlirSymbolRefAttrGetTypeID"),
    N(K, c, "mlirSymbolTableCreate"),
    N(K, c, "mlirSymbolTableDestroy"),
    N(K, c, "mlirSymbolTableErase"),
    N(K, c, "mlirSymbolTableGetSymbolAttributeName"),
    N(K, c, "mlirSymbolTableGetVisibilityAttributeName"),
    N(K, c, "mlirSymbolTableInsert"),
    N(K, c, "mlirSymbolTableLookup"),
    N(K, c, "mlirSymbolTableReplaceAllSymbolUses"),
    N(K, c, "mlirSymbolTableWalkSymbolTables"),
    N(K, c, "mlirTF32TypeGet"),
    N(K, c, "mlirTupleTypeGet"),
    N(K, c, "mlirTupleTypeGetNumTypes"),
    N(K, c, "mlirTupleTypeGetType"),
    N(K, c, "mlirTupleTypeGetTypeID"),
    N(K, c, "mlirTypeAttrGet"),
    N(K, c, "mlirTypeAttrGetTypeID"),
    N(K, c, "mlirTypeAttrGetValue"),
    N(K, c, "mlirTypeDump"),
    N(K, c, "mlirTypeEqual"),
    N(K, c, "mlirTypeGetContext"),
    N(K, c, "mlirTypeGetDialect"),
    N(K, c, "mlirTypeGetTypeID"),
    N(K, c, "mlirTypeIDAllocatorAllocateTypeID"),
    N(K, c, "mlirTypeIDAllocatorCreate"),
    N(K, c, "mlirTypeIDAllocatorDestroy"),
    N(K, c, "mlirTypeIDCreate"),
    N(K, c, "mlirTypeIDEqual"),
    N(K, c, "mlirTypeIDHashValue"),
    N(K, c, "mlirTypeIsAAnyQuantizedType"),
    N(K, c, "mlirTypeIsABF16"),
    N(K, c, "mlirTypeIsACalibratedQuantizedType"),
    N(K, c, "mlirTypeIsAComplex"),
    N(K, c, "mlirTypeIsAF16"),
    N(K, c, "mlirTypeIsAF32"),
    N(K, c, "mlirTypeIsAF64"),
    N(K, c, "mlirTypeIsAFloat8E4M3B11FNUZ"),
    N(K, c, "mlirTypeIsAFloat8E4M3FN"),
    N(K, c, "mlirTypeIsAFloat8E4M3FNUZ"),
    N(K, c, "mlirTypeIsAFloat8E5M2"),
    N(K, c, "mlirTypeIsAFloat8E5M2FNUZ"),
    N(K, c, "mlirTypeIsAFunction"),
    N(K, c, "mlirTypeIsAIndex"),
    N(K, c, "mlirTypeIsAInteger"),
    N(K, c, "mlirTypeIsAMemRef"),
    N(K, c, "mlirTypeIsANone"),
    N(K, c, "mlirTypeIsAOpaque"),
    N(K, c, "mlirTypeIsAPDLAttributeType"),
    N(K, c, "mlirTypeIsAPDLOperationType"),
    N(K, c, "mlirTypeIsAPDLRangeType"),
    N(K, c, "mlirTypeIsAPDLType"),
    N(K, c, "mlirTypeIsAPDLTypeType"),
    N(K, c, "mlirTypeIsAPDLValueType"),
    N(K, c, "mlirTypeIsAQuantizedType"),
    N(K, c, "mlirTypeIsARankedTensor"),
    N(K, c, "mlirTypeIsAShaped"),
    N(K, c, "mlirTypeIsATF32"),
    N(K, c, "mlirTypeIsATensor"),
    N(K, c, "mlirTypeIsATuple"),
    N(K, c, "mlirTypeIsAUniformQuantizedPerAxisType"),
    N(K, c, "mlirTypeIsAUniformQuantizedType"),
    N(K, c, "mlirTypeIsAUnrankedMemRef"),
    N(K, c, "mlirTypeIsAUnrankedTensor"),
    N(K, c, "mlirTypeIsAVector"),
    N(K, c, "mlirTypeParseGet"),
    N(K, c, "mlirTypePrint"),
    N(K, c, "mlirUniformQuantizedPerAxisTypeGet"),
    N(K, c, "mlirUniformQuantizedPerAxisTypeGetNumDims"),
    N(K, c, "mlirUniformQuantizedPerAxisTypeGetQuantizedDimension"),
    N(K, c, "mlirUniformQuantizedPerAxisTypeGetScale"),
    N(K, c, "mlirUniformQuantizedPerAxisTypeGetZeroPoint"),
    N(K, c, "mlirUniformQuantizedPerAxisTypeIsFixedPoint"),
    N(K, c, "mlirUniformQuantizedTypeGet"),
    N(K, c, "mlirUniformQuantizedTypeGetScale"),
    N(K, c, "mlirUniformQuantizedTypeGetZeroPoint"),
    N(K, c, "mlirUniformQuantizedTypeIsFixedPoint"),
    N(K, c, "mlirUnitAttrGet"),
    N(K, c, "mlirUnitAttrGetTypeID"),
    N(K, c, "mlirUnmanagedDenseBoolResourceElementsAttrGet"),
    N(K, c, "mlirUnmanagedDenseDoubleResourceElementsAttrGet"),
    N(K, c, "mlirUnmanagedDenseFloatResourceElementsAttrGet"),
    N(K, c, "mlirUnmanagedDenseInt16ResourceElementsAttrGet"),
    N(K, c, "mlirUnmanagedDenseInt32ResourceElementsAttrGet"),
    N(K, c, "mlirUnmanagedDenseInt64ResourceElementsAttrGet"),
    N(K, c, "mlirUnmanagedDenseInt8ResourceElementsAttrGet"),
    N(K, c, "mlirUnmanagedDenseResourceElementsAttrGet"),
    N(K, c, "mlirUnmanagedDenseUInt16ResourceElementsAttrGet"),
    N(K, c, "mlirUnmanagedDenseUInt32ResourceElementsAttrGet"),
    N(K, c, "mlirUnmanagedDenseUInt64ResourceElementsAttrGet"),
    N(K, c, "mlirUnmanagedDenseUInt8ResourceElementsAttrGet"),
    N(K, c, "mlirUnrankedMemRefTypeGet"),
    N(K, c, "mlirUnrankedMemRefTypeGetChecked"),
    N(K, c, "mlirUnrankedMemRefTypeGetTypeID"),
    N(K, c, "mlirUnrankedMemrefGetMemorySpace"),
    N(K, c, "mlirUnrankedTensorTypeGet"),
    N(K, c, "mlirUnrankedTensorTypeGetChecked"),
    N(K, c, "mlirUnrankedTensorTypeGetTypeID"),
    N(K, c, "mlirValueDump"),
    N(K, c, "mlirValueEqual"),
    N(K, c, "mlirValueGetFirstUse"),
    N(K, c, "mlirValueGetType"),
    N(K, c, "mlirValueIsABlockArgument"),
    N(K, c, "mlirValueIsAOpResult"),
    N(K, c, "mlirValuePrint"),
    N(K, c, "mlirValuePrintAsOperand"),
    N(K, c, "mlirValueReplaceAllUsesOfWith"),
    N(K, c, "mlirValueSetType"),
    N(K, c, "mlirVectorTypeGet"),
    N(K, c, "mlirVectorTypeGetChecked"),
    N(K, c, "mlirVectorTypeGetScalable"),
    N(K, c, "mlirVectorTypeGetScalableChecked"),
    N(K, c, "mlirVectorTypeGetTypeID"),
    N(K, c, "mlirVectorTypeIsDimScalable"),
    N(K, c, "mlirVectorTypeIsScalable"),
};
